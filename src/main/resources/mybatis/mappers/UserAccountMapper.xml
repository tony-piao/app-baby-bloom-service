<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.babybloom.web.mapper.UserAccountMapper">
  <resultMap id="BaseResultMap" type="com.babybloom.web.model.po.UserAccount">
    <id column="guid" jdbcType="BIGINT" property="guid" />
    <result column="userNumber" jdbcType="CHAR" property="userNumber" />
    <result column="userName" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="lifeFlag" jdbcType="TINYINT" property="lifeFlag" />
    <result column="openId" jdbcType="VARCHAR" property="openId" />
    <result column="unionId" jdbcType="VARCHAR" property="unionId" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="updateUser" jdbcType="BIGINT" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    guid, userNumber, userName, password, lifeFlag, openId, unionId, updateTime, updateUser
  </sql>
  <select id="selectByExample" parameterType="com.babybloom.web.model.po.UserAccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user_account
    where guid = #{guid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user_account
    where guid = #{guid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.babybloom.web.model.po.UserAccountExample">
    delete from t_user_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.babybloom.web.model.po.UserAccount">
    insert into t_user_account (guid, userNumber, userName, 
      password, lifeFlag, openId, 
      unionId, updateTime, updateUser
      )
    values (#{guid,jdbcType=BIGINT}, #{userNumber,jdbcType=CHAR}, #{userName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{lifeFlag,jdbcType=TINYINT}, #{openId,jdbcType=VARCHAR}, 
      #{unionId,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.babybloom.web.model.po.UserAccount">
    insert into t_user_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="guid != null">
        guid,
      </if>
      <if test="userNumber != null">
        userNumber,
      </if>
      <if test="userName != null">
        userName,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="lifeFlag != null">
        lifeFlag,
      </if>
      <if test="openId != null">
        openId,
      </if>
      <if test="unionId != null">
        unionId,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="updateUser != null">
        updateUser,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="guid != null">
        #{guid,jdbcType=BIGINT},
      </if>
      <if test="userNumber != null">
        #{userNumber,jdbcType=CHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="lifeFlag != null">
        #{lifeFlag,jdbcType=TINYINT},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="unionId != null">
        #{unionId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.babybloom.web.model.po.UserAccountExample" resultType="java.lang.Long">
    select count(*) from t_user_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_user_account
    <set>
      <if test="record.guid != null">
        guid = #{record.guid,jdbcType=BIGINT},
      </if>
      <if test="record.userNumber != null">
        userNumber = #{record.userNumber,jdbcType=CHAR},
      </if>
      <if test="record.userName != null">
        userName = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.lifeFlag != null">
        lifeFlag = #{record.lifeFlag,jdbcType=TINYINT},
      </if>
      <if test="record.openId != null">
        openId = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.unionId != null">
        unionId = #{record.unionId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        updateUser = #{record.updateUser,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_user_account
    set guid = #{record.guid,jdbcType=BIGINT},
      userNumber = #{record.userNumber,jdbcType=CHAR},
      userName = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      lifeFlag = #{record.lifeFlag,jdbcType=TINYINT},
      openId = #{record.openId,jdbcType=VARCHAR},
      unionId = #{record.unionId,jdbcType=VARCHAR},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      updateUser = #{record.updateUser,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.babybloom.web.model.po.UserAccount">
    update t_user_account
    <set>
      <if test="userNumber != null">
        userNumber = #{userNumber,jdbcType=CHAR},
      </if>
      <if test="userName != null">
        userName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="lifeFlag != null">
        lifeFlag = #{lifeFlag,jdbcType=TINYINT},
      </if>
      <if test="openId != null">
        openId = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="unionId != null">
        unionId = #{unionId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        updateUser = #{updateUser,jdbcType=BIGINT},
      </if>
    </set>
    where guid = #{guid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.babybloom.web.model.po.UserAccount">
    update t_user_account
    set userNumber = #{userNumber,jdbcType=CHAR},
      userName = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      lifeFlag = #{lifeFlag,jdbcType=TINYINT},
      openId = #{openId,jdbcType=VARCHAR},
      unionId = #{unionId,jdbcType=VARCHAR},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      updateUser = #{updateUser,jdbcType=BIGINT}
    where guid = #{guid,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.babybloom.web.model.po.UserAccountExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_user_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    insert into t_user_account
    (guid, userNumber, userName, password, lifeFlag, openId, unionId, updateTime, updateUser
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.guid,jdbcType=BIGINT}, #{item.userNumber,jdbcType=CHAR}, #{item.userName,jdbcType=VARCHAR}, 
        #{item.password,jdbcType=VARCHAR}, #{item.lifeFlag,jdbcType=TINYINT}, #{item.openId,jdbcType=VARCHAR}, 
        #{item.unionId,jdbcType=VARCHAR}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.updateUser,jdbcType=BIGINT}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into t_user_account (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'guid'.toString() == column.value">
          #{item.guid,jdbcType=BIGINT}
        </if>
        <if test="'userNumber'.toString() == column.value">
          #{item.userNumber,jdbcType=CHAR}
        </if>
        <if test="'userName'.toString() == column.value">
          #{item.userName,jdbcType=VARCHAR}
        </if>
        <if test="'password'.toString() == column.value">
          #{item.password,jdbcType=VARCHAR}
        </if>
        <if test="'lifeFlag'.toString() == column.value">
          #{item.lifeFlag,jdbcType=TINYINT}
        </if>
        <if test="'openId'.toString() == column.value">
          #{item.openId,jdbcType=VARCHAR}
        </if>
        <if test="'unionId'.toString() == column.value">
          #{item.unionId,jdbcType=VARCHAR}
        </if>
        <if test="'updateTime'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'updateUser'.toString() == column.value">
          #{item.updateUser,jdbcType=BIGINT}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>